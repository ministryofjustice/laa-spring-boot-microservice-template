name: Build and deploy after PR merged

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  build-test-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and test
        run: ./gradlew build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test coverage verification
        run: ./gradlew jacocoTestCoverageVerification

      - name: Integration test
        run: ./gradlew integrationTest --tests '*IntegrationTest'

      - name: Set to github user
        run: |
          git config --global user.email "github@justice.gov.uk"
          git config --global user.name "GitHub Actions Bot"

      - name: Update version
        run: ./gradlew release -Prelease.useAutomaticVersion=true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: spring-boot-microservice-service/build/test-results
          retention-days: 14

      - name: Upload checkstyle report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: spring-boot-microservice-service/build/reports/checkstyle
          retention-days: 14

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: spring-boot-microservice-service/build/reports/tests
          retention-days: 14

      - name: Upload jacoco coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: spring-boot-microservice-service/build/reports/jacoco
          retention-days: 14

  vulnerability-report:
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG: legal-aid-agency
      SNYK_TEST_EXCLUDE: build,generated
      SNYK_TARGET_REFERENCE: main
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check app for vulnerabilities
        uses: snyk/actions/gradle@master
        continue-on-error: true # To make sure that SARIF upload gets called
        with:
          command: monitor
          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE

      - name: Generate sarif Snyk report
        uses: snyk/actions/gradle@0.4.0
        continue-on-error: true
        with:
          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE --sarif-file-output=snyk-report.sarif

      # Fix/hack for Snyk's sarif file to avoid this error uploading to GitHub.
      # See https://github.com/github/codeql-action/issues/2187 for more context.
      - name: Fix undefined values
        run: |
          sed -i 's/"security-severity": "null"/"security-severity": "0"/g' snyk-report.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-report.sarif